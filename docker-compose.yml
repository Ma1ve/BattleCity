version: '3.9'

services:
  nginx:
    container_name: tanki-nginx
    image: tanki-nginx
    build: ./nginx
    ports:
      - '80:80'
    # volumes:
    #   - ./packages/client/dist/client:/usr/share/nginx/html
    networks:
      - tanki-net
    depends_on:
      - client
      - server
      - postgres
      - pgadmin

  client:
    container_name: tanki-client
    image: tanki-client
    restart: always
    command: yarn run start:client
    build:
      context: .
      dockerfile: ./Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    ports:
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    env_file:
      - .env
    # volumes:
    #   - ./:/app
    #   - /app/node_modules
    networks:
      - tanki-net
    depends_on:
      - server

  server:
    container_name: tanki-server
    image: tanki-server
    restart: always
    command: yarn run start:server
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./Dockerfile.server
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      NODE_ENV: development
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - tanki-net
    depends_on:
      - postgres

  postgres:
    container_name: tanki-postgres
    image: postgres:15-alpine
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - tanki-net

  pgadmin:
    container_name: tanki-pgadmin
    image: dpage/pgadmin4
    restart: always
    user: root
    ports:
      - '${PGADMIN_LISTEN_PORT_OUTPUT}:${PGADMIN_LISTEN_PORT}'
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    volumes:
      - ./tmp/pgadmin:/var/lib/pgadmin
    networks:
      - tanki-net
    depends_on:
      - postgres

networks:
  tanki-net:
    driver: bridge
